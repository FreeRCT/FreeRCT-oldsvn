Sprite generation is, wherever possible, semi- or fully automated. This makes designing sprites far simpler as "simple" tasks, like setting up the rendering output, converting the renders to 8bpp and organising them into the sprite sheets ready for in-game can be very time consuming on large numbers of sprites.

Essentially all sprites are renderings of true 3D models. All rendering is done via blender and modelling, wherever possible, should be done in blender too for simplicity. Unfortunately there is no good way to make a blender template file which codes the standard rendering node/render output setup so each new blender file for an object has to be a copy/paste job. The output of the render has to be set for every new .blend file. It should be to a directory in the same folder as the source .blend file, and the directory name should be the same as the .blend file.

Conversion to 8bpp is automated via ImageJ macros. The "8bpp-ize" macro can be installed in ImageJ, then run from the Plugins menu. Simply select the folder containing the sprites to convert. The 8bpp conversion will be placed in a parallel directory with "8bpp" appended to the name.

Creation of sprite sheets is automated via ImageJ macros. The "Combine Renders" macros (for both 2D and 3D sprite arrays) can be run as for the 8bpp-ize macro as described above. Note: 2D conversion is used for sprites with multiple configurations and their rotation along the z axis, 3D conversion is for sprites with multiple configurations, their rotation along the z axis and their animation stage or sprites like the coaster car with pitch, roll and yaw variants. The sprite sheet will be placed in the parent directory of the directory used for conversion.